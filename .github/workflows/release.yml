name: Build & Release Multi-OS

# Se déclenche quand tu pushes un tag vX.Y.Z
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      # 1️⃣ Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Installer les dépendances
      - name: Install dependencies
        run: npm install

      # 4️⃣ Build Electron pour chaque OS
      - name: Build Electron app
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then npm run build-win; fi
          if [ "${{ matrix.os }}" == "macos-latest" ]; then npm run build-mac; fi

      # 5️⃣ Upload des builds pour le job de release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crazycity-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Récupère les artifacts Windows et macOS
      - uses: actions/download-artifact@v3
        with:
          name: crazycity-windows-latest
          path: dist/windows
      - uses: actions/download-artifact@v3
        with:
          name: crazycity-macos-latest
          path: dist/macos

      # Crée la release GitHub avec les fichiers buildés
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/**/*"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
